version: '2'

networks:
    behave:

services:
    ca1:
      image: hyperledger/fabric-ca:$IMAGE_TAG
      environment:
        - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
        - FABRIC_CA_SERVER_CA_NAME=ca-org2
        - FABRIC_CA_SERVER_TLS_ENABLED=false
        - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org2.example.com-cert.pem
        - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/4841e326b0f5d5d1cfeb1de0866718d92f70e7b4040227e4264625ab16de6ad7_sk
      ports:
        - "8054:7054"
      command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.org2.example.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/4841e326b0f5d5d1cfeb1de0866718d92f70e7b4040227e4264625ab16de6ad7_sk -b admin:adminpw -d'
      volumes:
        - ../crypto-config/peerOrganizations/org2.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
        - ./hosts:/etc/hosts
      container_name: ca_peerOrg2
      networks:
        behave:
           aliases:
             - ${CORE_PEER_NETWORKID}

    zookeeper2:
        extends:
            file: docker-compose-base.yml
            service: zookeeper
        container_name: zookeeper2
        environment:
            - ZOO_MY_ID=3
            - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}

    kafka2:
        extends:
            file: docker-compose-base.yml
            service: kafka
        container_name: kafka2
        environment:
            - KAFKA_BROKER_ID=2
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
            - KAFKA_MESSAGE_MAX_BYTES=${KAFKA_MESSAGE_MAX_BYTES}
            - KAFKA_REPLICA_FETCH_MAX_BYTES=${KAFKA_REPLICA_FETCH_MAX_BYTES}
            - KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES=${KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES}
        depends_on:
            - zookeeper2
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}

    kafka3:
        extends:
            file: docker-compose-base.yml
            service: kafka
        container_name: kafka3
        environment:
            - KAFKA_BROKER_ID=3
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
            - KAFKA_MESSAGE_MAX_BYTES=${KAFKA_MESSAGE_MAX_BYTES}
            - KAFKA_REPLICA_FETCH_MAX_BYTES=${KAFKA_REPLICA_FETCH_MAX_BYTES}
            - KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES=${KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES}
        depends_on:
            - zookeeper2
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}

    orderer2.example.com:
        extends:
            file: docker-compose-base.yml
            service: orderer
        container_name: orderer2.example.com
        environment:
            - ORDERER_HOST=orderer2.example.com
            - CONFIGTX_ORDERER_ORDERERTYPE=kafka
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 9050:7050

    peer0.org2.example.com:
        extends:
            file: docker-compose-base.yml
            service: peer
        container_name: peer0.org2.example.com
        environment:
            - CORE_PEER_CHAINCODELISTENADDRESS=peer0.org2.example.com:7052
            - CORE_PEER_ID=peer0.org2.example.com
            - CORE_PEER_ADDRESS=peer0.org2.example.com:7051
            - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.org2.example.com:7051
            - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org2.example.com:7051
            - CORE_PEER_GOSSIP_ORGLEADER=${CORE_PEER_GOSSIP_ORGLEADER_PEER0_ORG2}
            - CORE_PEER_GOSSIP_USELEADERELECTION=${CORE_PEER_GOSSIP_USELEADERELECTION_PEER0_ORG2}
            - CORE_PEER_LOCALMSPID=Org2MSP
            - CORE_PEER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@org2.example.com/tls/ca.crt
            - CORE_PEER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@org2.example.com/tls/client.crt
            - CORE_PEER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@org2.example.com/tls/client.key
        volumes:
            - ../crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp:/var/hyperledger/msp
            - ../crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls:/var/hyperledger/tls
            - ../crypto-config/peerOrganizations/org2.example.com/users:/var/hyperledger/users
            - ../config/:/var/hyperledger/configs
        depends_on:
            - orderer2.example.com
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 9051:7051
          - 9053:7053

    peer1.org2.example.com:
        extends:
            file: docker-compose-base.yml
            service: peer
        container_name: peer1.org2.example.com
        environment:
            - CORE_PEER_CHAINCODELISTENADDRESS=peer1.org2.example.com:7052
            - CORE_PEER_ID=peer1.org2.example.com
            - CORE_PEER_ADDRESS=peer1.org2.example.com:7051
            - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org2.example.com:7051
            - CORE_PEER_GOSSIP_ORGLEADER=${CORE_PEER_GOSSIP_ORGLEADER_PEER1_ORG2}
            - CORE_PEER_GOSSIP_USELEADERELECTION=${CORE_PEER_GOSSIP_USELEADERELECTION_PEER1_ORG2}
            - CORE_PEER_LOCALMSPID=Org2MSP
            - CORE_PEER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@org2.example.com/tls/ca.crt
            - CORE_PEER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@org2.example.com/tls/client.crt
            - CORE_PEER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@org2.example.com/tls/client.key
        volumes:
            - ../crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/msp:/var/hyperledger/msp
            - ../crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/tls:/var/hyperledger/tls
            - ../crypto-config/peerOrganizations/org2.example.com/users:/var/hyperledger/users
            - ../config/:/var/hyperledger/configs
        depends_on:
            - orderer2.example.com
            - peer0.org2.example.com
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 10051:7051
          - 10053:7053
